16. Write a password generator in Python. Be creative with how you generate passwords - strong passwords have a mix of lowercase letters, uppercase letters, numbers, and symbols. The passwords should be random, generating a new password every time the user asks for a new password. Include your run-time code in a main method.
Extra: Ask the user how strong they want their password to be. For weak passwords, pick a word or two from a list.

  import random
  import string

  def get_random_string():
      power = str(input("Do you want a <strong> or <weak> password? "))
      if power == "strong":
          len1 = random.randint(4,10)
          len2 = random.randint(2,3)
          len3 = random.randint(1,2)

          result_str1 = ''.join(random.choice(string.ascii_letters) for i in range(len1))
          result_str2 = ''.join(random.choice(string.digits) for i in range(len2))
          result_str3 = ''.join(random.choice(string.punctuation) for i in range(len3))
          print(result_str1+result_str2+result_str3)
      elif power == "weak":
          weakPasswords = ['weakPassword:(', 'notSoWeakP@ssw0rd<3', 'veryweak', 'p@ssw0Rd']
          random.shuffle(weakPasswords)
          print(weakPasswords[0])
      else: print("Input is not correct. Type weak or strong.")
    
  get_random_string()

17. This is the first 4-chili exercise of this blog! Weâ€™ll see what people think, and decide whether or not to continue with 4-chili exercises in the future.
Use the BeautifulSoup and requests Python packages to print out a list of all the article titles on the New York Times homepage.




