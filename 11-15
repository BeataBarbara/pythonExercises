11. Ask the user for a number and determine whether the number is prime or not. (For those who have forgotten, a prime number is a number that has no divisors.). You can (and should!) use your answer to Exercise 4 to help you. Take this opportunity to practice using functions, described below.
  
  yourNumber = int(input("Please give any positive integer: "))
  divisors = []
  for i in range (1, yourNumber+1):
      if yourNumber % i == 0:
          divisors.append(i)

  if len(divisors) > 2:
      print(str(yourNumber) + " is a composite number")
  elif len(divisors) == 1:
      print("1 is neither composite nor prime number")
  else: print(str(yourNumber) + " is a prime number")

12. Write a program that takes a list of numbers (for example, a = [5, 10, 15, 20, 25]) and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function.

  a = [5, 10, 15, 20, 25, 40]
  newList = []

  def newList(list):
      return [a[0], a[-1]]

  print(newList(a))
  
13. Write a program that asks the user how many Fibonnaci numbers to generate and then generates them. Take this opportunity to think about how you can use functions. Make sure to ask the user to enter the number of numbers in the sequence to generate.(Hint: The Fibonnaci seqence is a sequence of numbers where the next number in the sequence is the sum of the previous two numbers in the sequence. The sequence looks like this: 1, 1, 2, 3, 5, 8, 13, â€¦)

  fibonnaciList = []
  myNum = int(input("How many Fibonnaci numbers to generate? "))    
  def fibonnaci(number):
      i = 1
      while i < number+1:
          if i == 1:
              newNumber = 1
          elif i == 2:
              newNumber = 1
          else: 
              newNumber = fibonnaciList[-2] + fibonnaciList[-1]

          fibonnaciList.append(newNumber)
          i = i + 1
      print(fibonnaciList)

  fibonnaci(myNum)

14. Write a program (function!) that takes a list and returns a new list that contains all the elements of the first list minus all the duplicates.

  a = [1,2,3,4,3,2,1,5,6,7,8,8,8,8,0]
  b = []
  
  def removeDuplicates(mylist):
      for el in mylist:
          if el not in b:
              b.append(el)
      return b

  def removeDupl(mylist):
      return list(set(mylist))

  print(a)        
  print(removeDuplicates(a))
  print(removeDupl(a))

15. Write a program (using functions!) that asks the user for a long string containing multiple words. Print back to the user the same string, except with the words in backwards order. For example, say I type the string: "My name is Michele" => "Michele is name My"

def reverseString():
    someString =  str(input("Type some words: "))
    splittedStr = someString.split()
    splittedStr.reverse()
    newString = " ".join(splittedStr)
    return newString

print(reverseString())


